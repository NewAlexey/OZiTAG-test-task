(()=>{"use strict";class e{constructor(e="div",t=[]){this.element=document.createElement(e),this.element.classList.add(...t)}}class t extends e{constructor(){super("div",["buttons-container"]),this.element.innerHTML='\n    <div class="button-apply"> применить </div>\n    <div class="button-clear"> очистить </div>\n    '}}class n extends e{constructor(){super("div",["list-header"]),this.countCheckedOptions=0,this.element.innerHTML=`\n    <p> Тендеры в роли поставщика </p>\n    <p class="selected-elements visually-hidden"> Показать выбранное \n      (<span>${this.countCheckedOptions}</span>)\n    </p>\n    `,this.hideInformationIfSelectedEmpty()}setNewValueInCountElement(){this.element.querySelector("span").innerText=`${this.countCheckedOptions}`,this.hideInformationIfSelectedEmpty()}hideInformationIfSelectedEmpty(){const e=this.element.querySelector(".selected-elements");0===this.countCheckedOptions?e.classList.add("visually-hidden"):e.classList.remove("visually-hidden")}}function o(e,t,n,o){return`<div class="option-item">\n            ${function(e,t){return t.has(e)?`<input type="checkbox" id="value-${e}" class="custom-checkbox" checked="checked">`:`<input type="checkbox" id="value-${e}" class="custom-checkbox">`}(t.dataValue,n)}\n            <label for="value-${t.dataValue}" data-value="value-${t.dataValue}" class="${n.has(t.dataValue)?"background-selected-option":""}">\n            ${t.isArrowNeeded&&t.isOpen&&!t.isChecked?'<div class="option-dot"></div>':""}\n              <span style="margin-left: ${e}px; left: ${t.isArrowNeeded?0:25}px" \n              data-value="value-${t.dataValue}">\n                ${t.isArrowNeeded?`<div class="arrow-up ${t.isOpen?"":"arrow-down"}" data-value="value-${t.dataValue}"></div>\n                      ${function(e,t){return e.isShown?`<div class="vertical-line" style="height:${function(e,t){var n;let o=0;return null===(n=e.childrenIndex)||void 0===n||n.forEach((e=>{var n;(null===(n=t[e])||void 0===n?void 0:n.isShown)&&(o+=45)})),o}(e,t)}px"></div>`:""}(t,o)}`:""}\n                ${t.option.innerText}\n              </span>\n            </label>\n          </div>`}const i=function(){let e=0;return function(){return e+=1,e}}();function s(){return Math.random()<.5}class l extends e{constructor(){super("div",["select-container"]),this.checkedOptions=new Set,this.element.innerHTML=`\n    <select multiple size="1">\n      <option selected value="">Код ОКРБ или наименование закупаемой продукции</option>\n      <option value="10">[A] - Продукция сельского хозяйства, лесного хозяйства рыбоводства и рыболовства</option>\n      <option value="11">\n        [О] - Услуги в области государственного управления и обороны, предоставляемые обществу в целом; услуги по\n        обязательному социальному страхованию\n      </option>\n      <option value="12" data-level="2">\n        [84] - Услуги в области государственного управления и обороны, предоставляемые обществу в целом; услуги по\n        обязательному социальному страхованию\n      </option>\n      <option value="13" data-level="3" ${s()?"selected":""}>\n      [84.1] - Услуги в области государственного управления общего характера и социально-экономической сфере\n      </option>\n      <option value="14" data-level="4">\n        [84.11] - Услуги в области государственного управления общего характера\n      </option>\n      <option value="15" data-level="5">\n        [84.11.11] - Услуги в области исполнительной и законодательной деятельности\n      </option>\n      <option value="16" data-level="6" ${s()?"selected":""}>\n        [84.11.11.100] - Услуги центральных органов исполнительной и законодательной власти\n      </option>\n      <option value="17" data-level="6" >\n        [84.11.11.200] - Услуги органов управления и самоуправления областного территориального уровня\n      </option>\n      <option value="18" data-level="6">\n        [84.11.11.300] - Услуги органов управления и самоуправления базового территориального уровня\n      </option>\n      <option value="19" data-level="5" ${s()?"selected":""}>\n        [84.11.11] - Услуги в области исполнительной и законодательной деятельности\n      </option>\n      <option value="20">[A] - Продукция сельского хозяйства, лесного хозяйства рыбоводства и рыболовства</option>\n      <option value="21">\n        [О] - Услуги в области государственного управления и обороны, предоставляемые обществу в целом; услуги по\n        обязательному социальному страхованию\n      </option>\n      <option value="22" data-level="2">\n        [84] - Услуги в области государственного управления и обороны, предоставляемые обществу в целом; услуги по\n        обязательному социальному страхованию\n      </option>\n      <option value="23" data-level="3">\n        [84.1] - Услуги в области государственного управления общего характера и социально-экономической сфере\n      </option>\n      <option value="24" data-level="4">\n        [84.11] - Услуги в области государственного управления общего характера\n      </option>\n      <option value="25" data-level="5" ${s()?"selected":""}>\n        [84.11.11] - Услуги в области исполнительной и законодательной деятельности\n      </option>\n      <option value="26" data-level="6">\n        [84.11.11.100] - Услуги центральных органов исполнительной и законодательной власти\n      </option>\n      <option value="27" data-level="6">\n        [84.11.11.200] - Услуги органов управления и самоуправления областного территориального уровня\n      </option>\n      <option value="28" data-level="6" ${s()?"selected":""}>\n        [84.11.11.300] - Услуги органов управления и самоуправления базового территориального уровня\n      </option>\n    </select>\n    `,this.isShownOptions=!1,this.allOptionsItems=this.getAllOptionsItem(),this.setCheckedOptions()}setCheckedOptions(){const e=[...this.element.querySelectorAll("option")];e.shift(),e.forEach(((e,t)=>{var n;null!==e.getAttribute("selected")&&(this.checkedOptions.add(String(null===(n=this.allOptionsItems[t])||void 0===n?void 0:n.dataValue)),e.removeAttribute("selected"))}))}getAllOptionsItem(){const e=[...this.element.querySelectorAll("option")].map((e=>{const t={};return t.option=e,t.isArrowNeeded=!1,t.isOpen=!0,t.isChecked=!1,t.isShown=!0,t.dataLevel=+e.getAttribute("data-level"),t.dataValue=`${+e.value}${i()}`,t.childrenIndex=[],t}));var t;e.shift();var n,o;return n=function(e){var t,n,o,i;for(let s=1;s<e.length;s+=1){let l=s;for(;(null===(t=e[s])||void 0===t?void 0:t.dataLevel)<(null===(n=e[l+1])||void 0===n?void 0:n.dataLevel);)null===(i=null===(o=e[s])||void 0===o?void 0:o.childrenIndex)||void 0===i||i.push(l+1),l+=1}return e}((t=e).map(((e,n)=>{var o,i;const s=null===(o=t[n+1])||void 0===o?void 0:o.option.getAttribute("data-level");if(!s)return e;if(s){const o=null===(i=t[n])||void 0===i?void 0:i.option.getAttribute("data-level");if(!o||+o!=+s&&+o<+s){const t=e;return t.isArrowNeeded=!0,t}}return e}))),o=this.checkedOptions,n.map((e=>{if(o.has(e.dataValue)){const t=e;return t.isChecked=!0,t}return e}))}getAllOptionsAsString(){if(!this.isShownOptions)return this.isShownOptions=!0,function(e,t){let n=0;return e.reduce(((e,i,s,l)=>{var a;const c=i.option.getAttribute("data-level");if(!i.isShown)return e;if(!c)return n=0,e+o(n,i,t,l);const d=null===(a=l[s-1])||void 0===a?void 0:a.option.getAttribute("data-level");return d?d===c?e+=o(n,i,t,l):d<c?(n+=15,e+=o(n,i,t,l)):d>c?(n-=15,e+=o(n,i,t,l)):e:(n=15,e+=o(n,i,t,l))}),"")}(this.allOptionsItems,this.checkedOptions);this.isShownOptions=!1}isOptionInCheckedList(e){return this.checkedOptions.has(e)}addCheckedOption(e){this.checkedOptions.add(e)}removeCheckedOption(e){this.checkedOptions.delete(e)}}function a(e){return e.getAttribute("data-value").split("-")[1]}class c{constructor(e){this.rootElement=e,this.funcHandleClickApplyButton=this.handleClickApplyButton.bind(this),this.funcHandleClickClearButton=this.handleClickClearButton.bind(this),this.contentContainer=document.createElement("div"),this.contentContainer.classList.add("list-component"),this.headerListComponent=new n,this.selectComponent=new l,this.buttonsComponent=new t,this.rootElement.append(this.contentContainer),this.contentContainer.append(this.headerListComponent.element),this.contentContainer.append(this.selectComponent.element),this.optionsListContainer=null,this.addListenersToSelect(),this.setCheckedOption()}setCheckedOption(){this.headerListComponent.countCheckedOptions=this.selectComponent.checkedOptions.size,this.headerListComponent.setNewValueInCountElement(),this.headerListComponent.hideInformationIfSelectedEmpty()}addListenersToSelect(){this.selectComponent.element.querySelector("select").addEventListener("click",this.showOptionsListOnScreen.bind(this)),this.headerListComponent.element.querySelector(".selected-elements").addEventListener("click",this.setAllOptionIsShowAndShowOnScreen.bind(this))}setAllOptionIsShowAndShowOnScreen(){const e=this.selectComponent.allOptionsItems.map((e=>{const t=e;return t.isShown=!0,t.isOpen=!0,t}));this.selectComponent.allOptionsItems=[...e],this.showOptionsListOnScreen()}showOptionsListOnScreen(){var e,t;const n=this.selectComponent.getAllOptionsAsString();n?(this.optionsListContainer=function(e,t,n){const o=document.createElement("div");return o.classList.add(n),o}(0,0,"select-information-container"),this.contentContainer.append(this.optionsListContainer),this.optionsListContainer.addEventListener("click",this.setCheckedOptionHandleClick.bind(this)),this.optionsListContainer.innerHTML=n,this.contentContainer.append(this.buttonsComponent.element),this.addListenersToButtons()):(null===(e=this.optionsListContainer)||void 0===e||e.removeEventListener("click",this.setCheckedOptionHandleClick.bind(this)),null===(t=this.optionsListContainer)||void 0===t||t.remove(),this.removeListenersToButtons(),this.buttonsComponent.element.remove())}addListenersToButtons(){var e,t;null===(e=this.buttonsComponent.element.querySelector(".button-apply"))||void 0===e||e.addEventListener("click",this.funcHandleClickApplyButton),null===(t=this.buttonsComponent.element.querySelector(".button-clear"))||void 0===t||t.addEventListener("click",this.funcHandleClickClearButton)}removeListenersToButtons(){var e,t;null===(e=this.buttonsComponent.element.querySelector(".button-apply"))||void 0===e||e.removeEventListener("click",this.funcHandleClickApplyButton),null===(t=this.buttonsComponent.element.querySelector(".button-clear"))||void 0===t||t.removeEventListener("click",this.funcHandleClickClearButton)}handleClickApplyButton(){var e,t;alert(`Следующие выбранные элементы - ${[...this.selectComponent.checkedOptions].join(", ")} - приняты`),this.selectComponent.isShownOptions=!1,null===(e=this.optionsListContainer)||void 0===e||e.removeEventListener("click",this.setCheckedOptionHandleClick.bind(this)),null===(t=this.optionsListContainer)||void 0===t||t.remove(),this.removeListenersToButtons(),this.buttonsComponent.element.remove()}clearCheckedOptions(){[...this.contentContainer.querySelectorAll("input")].forEach((e=>{e.checked=!1})),[...this.contentContainer.querySelectorAll("label")].forEach((e=>{e.classList.remove("background-selected-option")}))}clearCheckedOptionsFromHeaderComponent(){this.selectComponent.checkedOptions.clear(),this.headerListComponent.countCheckedOptions=0,this.headerListComponent.setNewValueInCountElement()}handleClickClearButton(){this.clearCheckedOptions(),this.clearCheckedOptionsFromHeaderComponent()}setCheckedOptionHandleClick(e){const t=e.target;if("span"!==t.localName){if(t.classList.contains("arrow-up")){const n=a(t);return t.classList.contains("arrow-down")?(this.setShownOptionsList(n,!0),void e.preventDefault()):(this.setShownOptionsList(n,!1),void e.preventDefault())}"label"===t.localName&&(t.classList.toggle("background-selected-option"),this.checkedOptionListItem(t))}else e.preventDefault()}setShownOptionsList(e,t){var n;const o=[...this.selectComponent.allOptionsItems],i=o.map((n=>n.dataValue===e?(n.isOpen=t,n):n)).find((t=>t.dataValue===e));this.setChildrenIsOptionsList(i,o,t),this.selectComponent.isShownOptions=!1,null===(n=this.optionsListContainer)||void 0===n||n.remove(),this.showOptionsListOnScreen()}setChildrenIsOptionsList(e,t,n){const o=t.map(((t,o)=>{var i;return null===(i=e.childrenIndex)||void 0===i||i.forEach((e=>{e===o&&(t.isShown=n,t.isOpen=!0)})),t}));this.selectComponent.allOptionsItems=[...o]}checkedOptionListItem(e){const t=a(e);this.selectComponent.allOptionsItems=this.selectComponent.allOptionsItems.map((e=>(t===e.dataValue&&(e.isChecked=!e.isChecked),e))),this.selectComponent.isOptionInCheckedList(t)?(this.selectComponent.removeCheckedOption(t),this.headerListComponent.countCheckedOptions-=1):(this.selectComponent.addCheckedOption(t),this.headerListComponent.countCheckedOptions+=1),this.headerListComponent.setNewValueInCountElement()}}class d extends e{constructor(e){super("div",["button-add-new-select"]),this.rootElement=e,this.element.innerText="Добавить новый компонент",this.rootElement.append(this.element)}}function r(){const e=document.querySelector(".container");new c(e)}window.onload=()=>{const e=document.querySelector(".container");if(!e)throw Error("App root element not found");new c(e),new d(e).element.addEventListener("click",r)}})();